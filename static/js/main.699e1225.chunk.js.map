{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","fill","attributeName","repeatCount","dur","calcMode","keyTimes","values","keySplines","begin","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","result","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onError","onCharLoading","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgClass","includes","CharList","props","chars","newItemLoading","charEnded","onItemHandler","onCharSelected","myRef","current","onRequest","onCharListLoading","newCharsList","ended","createRef","renderCharsList","tabIndex","onKeyDown","e","key","disabled","propType","PropTypes","func","isRequired","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","item","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.699e1225.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{\n        margin: \"0 auto\",\n        background: \"none\",\n        display: \"block\",\n        shapeRendering: \"auto\",\n      }}\n      width=\"200px\"\n      height=\"200px\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#e15b64\">\n        <animate\n          attributeName=\"r\"\n          repeatCount=\"indefinite\"\n          dur=\"0.25s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          values=\"10;0\"\n          keySplines=\"0 0.5 0.5 1\"\n          begin=\"0s\"\n        ></animate>\n        <animate\n          attributeName=\"fill\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"discrete\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"#e15b64;#abbd81;#f8b26a;#f47e60;#e15b64\"\n          begin=\"0s\"\n        ></animate>\n      </circle>\n      <circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#e15b64\">\n        <animate\n          attributeName=\"r\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"0;0;10;10;10\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"0s\"\n        ></animate>\n        <animate\n          attributeName=\"cx\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"16;16;16;50;84\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"0s\"\n        ></animate>\n      </circle>\n      <circle cx=\"50\" cy=\"50\" r=\"10\" fill=\"#f47e60\">\n        <animate\n          attributeName=\"r\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"0;0;10;10;10\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.25s\"\n        ></animate>\n        <animate\n          attributeName=\"cx\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"16;16;16;50;84\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.25s\"\n        ></animate>\n      </circle>\n      <circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#f8b26a\">\n        <animate\n          attributeName=\"r\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"0;0;10;10;10\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.5s\"\n        ></animate>\n        <animate\n          attributeName=\"cx\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"16;16;16;50;84\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.5s\"\n        ></animate>\n      </circle>\n      <circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#abbd81\">\n        <animate\n          attributeName=\"r\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"0;0;10;10;10\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.75s\"\n        ></animate>\n        <animate\n          attributeName=\"cx\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          calcMode=\"spline\"\n          keyTimes=\"0;0.25;0.5;0.75;1\"\n          values=\"16;16;16;50;84\"\n          keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\"\n          begin=\"-0.75s\"\n        ></animate>\n      </circle>\n    </svg>\n  );\n};\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250\",\n        height: \"250\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","class MarvelService {\n  _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  _apiKey = \"apikey=e71e2718fabff072296a2d9a69c1759c\";\n  _baseOffset = 210;\n\n  //функція getResource - запитує дані через fetch, чекає на відповідь у разі помилки(серверні, наприклад 404) видає повідомлення у консоль, якщо все ок, то отримуємо відповідь у форматі json\n  getResource = async (url) => {\n    let result = await fetch(url);\n\n    if (!result.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${result.status}`);\n    }\n\n    return await result.json();\n  };\n\n  // запити до API\n\n  //запит на групу персонажів\n  getAllCharacters = async (offset = this._baseOffset) => {\n    const result = await this.getResource(\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`,\n    ); // Request URL з сайту Marvel Developer\n\n    //повертаємо масив з новими об'єктами\n    return result.data.results.map(this._transformCharacter);\n  };\n\n  //запит на одного персонажа\n  getCharacter = async (id) => {\n    const result = await this.getResource(\n      `${this._apiBase}characters/${id}?&${this._apiKey}`,\n    ); // Request URL з сайту Marvel Developer\n    return this._transformCharacter(result.data.results[0]);\n  };\n\n  //метод отримує дані та трансформує в необхідні. в нашому випадку отримує великий об'єкт з даними про персонажа і повертає об'єкт з потрібними нам даними\n  _transformCharacter = (char) => {\n    //перевірка для description\n    const description = char.description\n      ? char.description.length > 150\n        ? char.description.slice(0, 149) + \"...\"\n        : char.description\n      : `There is no data about ${char.name}`;\n\n    return {\n      id: char.id,\n      name: char.name,\n      description: description,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n}\n\nexport default MarvelService;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nclass RandomChar extends Component {\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  //створюємо нову властивість this.marvelService всередині класу RandomChar\n  marvelService = new MarvelService(); // новий екземпляр класу MarvelService, в якому зберігається нащадок класу\n\n  // один з методів життєвого циклу компонента\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({ char: char, loading: false });\n  };\n\n  onError = () => {\n    this.setState({ loading: false, error: true });\n  };\n\n  onCharLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  //метод звертається до сервера - отримує дані - записує в state\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //випадкове id персонажа. рандомне число розраховується за формулою\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state; //деструктуризація об'єкта (state) - char з даними про персонажа та loading\n\n    //змінні в яких прописані умови за яких відображається компонент <ErrorMessage /> або <Spinner /> або <View />\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"randomchar\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button className=\"button button__main\">\n            <div className=\"inner\" onClick={this.updateChar}>\n              try it\n            </div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n  }\n}\n\n//компонент для відображення елементу верстки(простий елемент рендерингу)\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char; //деструктуризація об'єкта (char) з даними про персонажа\n\n  // const style = thumbnail.includes(\"image_not_available\")\n  //   ? { objectFit: \"contain\" }\n  //   : null;\n  const imgClass = thumbnail.includes(\"image_not_available\")\n    ? \"randomchar__img randomchar__img--no-image\"\n    : \"randomchar__img\";\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        // style={style}\n        src={thumbnail}\n        alt=\"Random character\"\n        className={imgClass}\n      />\n\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { Component, createRef } from \"react\";\n\nimport \"./charList.scss\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport PropTypes from \"prop-types\";\n\nclass CharList extends Component {\n  //new\n  constructor(props) {\n    super(props);\n    this.myRef = createRef();\n  }\n\n  state = {\n    chars: [], // Список персонажів\n    loading: true, //  вказує на те, чи йде завантаження\n    error: false, // вказує на те, чи виникла помилка\n    newItemLoading: false, //  вказує на те, чи йде завантаження нових елементів\n    offset: 210, // Початковий зсув для отримання нових персонажів\n    charEnded: false,\n  };\n\n  marvelService = new MarvelService(); // Екземпляр сервісу Marvel для отримання даних\n\n  componentDidMount() {\n    // Викликається після монтажу компонента\n    this.onRequest(); // Запуск методу для отримання персонажів\n  }\n\n  onItemHandler = (id) => {\n    this.props.onCharSelected(id);\n    this.myRef.current = id;\n  };\n\n  // Метод для отримання нових персонажів\n  onRequest = () => {\n    const { offset } = this.state; // Деструктуризація стану для отримання поточного значення зсуву\n    this.onCharListLoading(); // Виклик функції для відображення індикатора завантаження\n    this.marvelService\n      .getAllCharacters(offset) // Виклик сервісу Marvel для отримання персонажів\n      .then((newCharsList) => {\n        let ended = false;\n        if (newCharsList.length < 9) {\n          ended = true;\n        }\n\n        // Успішна обробка результатів\n        this.setState(({ chars }) => ({\n          chars: [...chars, ...newCharsList], // Додаємо нових персонажів до поточного списку\n          loading: false, // Вимикаємо індикатор завантаження\n          error: false, // Вимикаємо прапорець помилки\n          newItemLoading: false, // Вимикаємо прапорець завантаження нових елементів\n          offset: offset + 9, // Збільшуємо зсув для наступного запиту\n          charEnded: ended,\n        }));\n      })\n      .catch(() => {\n        // Обробка помилки при отриманні персонажів\n        this.setState({\n          chars: [], // Очищаємо список персонажів у випадку помилки\n          loading: false, // Вимикаємо індикатор завантаження\n          error: true, // Вмикаємо прапорець помилки\n        });\n      });\n  };\n\n  // Функція для відображення індикатора завантаження нових елементів\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true, // Додаємо прапорець завантаження нових елементів\n    });\n  };\n\n  render() {\n    // Відображення різних станів компонента в залежності від значень прапорців\n    if (this.state.error) return <ErrorMessage />; // Відображення повідомлення про помилку\n    if (this.state.loading) return <Spinner />; // Відображення індикатора завантаження\n\n    // Формування списку персонажів для відображення\n    const renderCharsList = this.state.chars.map((char) => (\n      <li\n        //new\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === \" \" || e.key === \"Enter\") this.onItemHandler(char.id);\n        }}\n        key={char.id}\n        className={`char__item ${\n          char.id === this.myRef.current ? \"char__item--selected\" : \"\"\n        }`}\n        onClick={() => this.onItemHandler(char.id)} // Передача ідентифікатора обраного персонажа до App.js\n      >\n        <img\n          src={char.thumbnail}\n          alt={char.name}\n          className={\n            char.thumbnail.includes(\"image_not_available\")\n              ? \"char__item-img char__item-img--no-image\"\n              : \"char__item-img\"\n          }\n        />\n        <div className=\"char__name\">{char.name}</div>\n      </li>\n    ));\n\n    // Відображення списку персонажів та кнопки \"Завантажити більше\"\n    return (\n      <div className=\"char__list\">\n        <ul className=\"char__grid\">{renderCharsList}</ul>\n        <button\n          className=\"button button__main button__long\"\n          disabled={this.state.newItemLoading}\n          style={{ display: this.state.charEnded ? \"none\" : \"block\" }}\n          onClick={() => this.onRequest(this.state.offset)} // Виклик методу для отримання нових персонажів\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nCharList.propType = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport MarvelService from \"../../services/MarvelService\";\n\nimport \"./charInfo.scss\";\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  //створюємо нову властивість this.marvelService всередині класу CharInfo\n  marvelService = new MarvelService(); // новий екземпляр класу MarvelService, в якому зберігається нащадок класу\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const { charId } = this.props; //передаємо пропси з App.js. деструктуруємо charId\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({ char: char, loading: false });\n  };\n\n  onCharLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  onError = () => {\n    this.setState({ loading: false, error: true });\n  };\n\n  render() {\n    const { char, loading, error } = this.state; //деструктуризація об'єкта (state)\n\n    //змінні в яких прописані умови за яких відображається компонент <ErrorMessage /> або <Spinner /> або <View /> або <Skeleton/>\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : `There is no comics with ${name}`}\n        {comics.map((item, i) => {\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h2>Something went wrong...</h2>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nclass App extends Component {\n  state = {\n    selectedChar: null,\n  };\n\n  // метод який встановлює вибраний персонаж (selectedChar)\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <ErrorBoundary>\n            <RandomChar />\n          </ErrorBoundary>\n          <div className=\"char__content\">\n            <ErrorBoundary>\n              {/* створюємо пропс для встановлення персонажа*/}\n              <CharList onCharSelected={this.onCharSelected} />\n            </ErrorBoundary>\n\n            <ErrorBoundary>\n              <CharInfo charId={this.state.selectedChar} />\n            </ErrorBoundary>\n          </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\n\nimport \"./style/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}